server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name ota.opendesireproject.org;
  root /var/www/ota.opendesireproject.org/www;
  access_log /var/www/ota.opendesireproject.org/logs/access.log;
  #error_log /var/www/ota.opendesireproject.org/logs/error.log;

  charset utf-8;

  location / {
      index index.php;
      # First attempt to serve request as file, then
      # as directory, then fall back to index.html
      try_files $uri $uri/ /index.php;
      # Uncomment to enable naxsi on this location
      # include /etc/nginx/naxsi.rules
  }

  # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
  #
  location ~ \.php$ {
      try_files $uri = 404;
      fastcgi_split_path_info ^(.+\.php)(.*)$;
      fastcgi_pass unix:/var/run/php5-fpm.sock;
      fastcgi_index index.php;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }

  # SSL configuration
  # Based on http://tautt.com/best-nginx-configuration-for-security/
  ssl on;
  ssl_certificate /etc/nginx/ssl/ota.opendesireproject.org.pem;
  ssl_certificate_key /etc/nginx/ssl/ota.opendesireproject.org.key;

  include ssl.conf;

  # enable ocsp stapling (mechanism by which a site can convey certificate revocation information to visitors in a privacy-preserving, scalable manner)
  # http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
  ssl_trusted_certificate /etc/nginx/ssl/ota.opendesireproject.org.pem;

  # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
  # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
  add_header Strict-Transport-Security max-age=31536000;

  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  #
  location ~ /\.ht {
      deny all;
  }
}

# redirect all http traffic to https
server {
  listen 80;
  listen [::]:80;
  server_name ota.opendesireproject.org;
  return 301 https://$host$request_uri;
}
